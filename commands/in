#!/bin/bash

set -e

exec 3>&1 # use fd 3 for script output
exec 1>&2 # send normal stdout to stderr for logging

input=$(mktemp /tmp/resource-in.XXXXXX)
cat > "${input}" <&0

#test=$(<&0)
#echo "test = $test"
#echo "========================================="

#echo '["version": "1.0.0"]'
#echo '{"version":{"ref":"none"}}'


host=$(cat $input | jq '.[] | select(.host != null) | .host ' | tr -d '"')
username=$(cat $input | jq '.[] | select(.username != null) | .username ' | tr -d '"')
private_key=$(cat $input | jq '.[] | select(.private_key != null) | .private_key ' | tr -d '"')
source_dir=$(cat $input | jq '.[] | select(.source_dir != null) | .source_dir ' | tr -d '"')
source_file=$(cat $input | jq '.[] | select(.source_file != null) | .source_file ' | tr -d '"')

(jq -r '.source.private_key // empty' < $input) > private_key.pem
chmod 0600 private_key.pem

if [[ -z ${source_file} ]]; then
  scp -i private_key.pem -r -o StrictHostKeyChecking=no $username@$host:$source_dir/* $1/
else 
  scp -i private_key.pem -r -o StrictHostKeyChecking=no $username@$host:$source_dir/${source_file} $1/
fi

metadata="$(cat <<EOF
{
    "scp-get": [
        {
            "dirname": "${source_dir}"
        } 
    ]
}
EOF
)"


echo "$metadata" | jq -s add >&3
